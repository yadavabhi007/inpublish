"""
Django settings for inpublish project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

import pymysql
from configurations import Configuration
from django.utils.translation import ugettext_lazy as _

pymysql.install_as_MySQLdb()


class Base(Configuration):
    # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
    BASE_DIR = os.path.dirname(
        os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    )
    MAX_FILE_SIZE = 31457280
    MAX_FILE_SIZE_GIODICART = 31457280
    PROJECT_PATH = os.path.realpath(os.path.dirname(os.path.dirname(__file__)))

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = "#5+u!&1&scb0jo3q6woow_0oyn1@q+kn1vm$1n=m9t5q6#@lw6"

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True

    ALLOWED_HOSTS = ["*"]
    # SESSION_MINUTE_EXPIRATION = 60 todo commento la scadenza della sessione

    # Application definition
    INSTALLED_APPS = [  # django apps
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
    ]
    INSTALLED_APPS += [  # libraries apps
        "django_extensions",
        "django_cleanup.apps.CleanupConfig",
        "pipeline",
        "rest_framework",
        "rest_framework.authtoken",
        "menu",
        "js_urls",
        "corsheaders",
        "django_json_widget",
    ]
    INSTALLED_APPS += [  # project apps
        "builder",
        "aeb",
        "interattivo_worker",
    ]

    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "utils.middleware.MySessionMiddleware",
        "django.middleware.locale.LocaleMiddleware",
        "corsheaders.middleware.CorsMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "corsheaders.middleware.CorsPostCsrfMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]

    ROOT_URLCONF = "inpublish.urls"

    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [
                os.path.join(BASE_DIR, "templates"),
            ],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                    "django.template.context_processors.i18n",
                ],
            },
        },
    ]

    WSGI_APPLICATION = "inpublish.wsgi.application"

    AUTH_USER_MODEL = "builder.CustomUser"

    # Database
    # https://docs.djangoproject.com/en/3.0/ref/settings/#databases
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": "name",
            "USER": "user",
            "PASSWORD": "password",
            "HOST": "host",
            "PORT": "port",
        },
    }

    DATABASE_ROUTERS = ["aeb.db_routers.AebDbRouter"]

    # Password validation
    # https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

    AUTH_PASSWORD_VALIDATORS = [
        {
            "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
        },
    ]

    # Internationalization
    # https://docs.djangoproject.com/en/3.0/topics/i18n/

    LANGUAGE_PATHS = [
        os.path.join(BASE_DIR, "builder/locale"),  # app folder
        os.path.join(
            BASE_DIR, "../../locale"
        ),  # base folder where manage.py resides
    ]

    LANGUAGES = [
        ("en", _("English")),
        ("it", _("Italian")),
        ("es", _("Spanish")),
    ]

    LANGUAGE_CODE = "it"

    LOCALE_PATHS = (
        os.path.join(BASE_DIR, "../../locale"),
        os.path.join(PROJECT_PATH, "locale"),
        os.path.join(PROJECT_PATH, "locale/builder"),
    )

    TIME_ZONE = "Europe/Rome"
    USE_I18N = True
    USE_L10N = True
    USE_TZ = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/3.0/howto/static-files/
    MEDIA_ROOT = os.path.join(BASE_DIR, "media")
    MEDIA_URL = "/media/"
    FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755

    STATIC_ROOT = os.path.join(BASE_DIR, "static")
    STATIC_URL = "/static/"

    STATICFILES_STORAGE = "pipeline.storage.PipelineStorage"

    STATICFILES_FINDERS = (
        "django.contrib.staticfiles.finders.FileSystemFinder",
        "django.contrib.staticfiles.finders.AppDirectoriesFinder",
        "pipeline.finders.PipelineFinder",
    )

    PIPELINE = {
        # 'COMPILERS': ('pipeline.compilers.es6.ES6Compiler', ),
        # 'BABEL_BINARY': "/usr/local/bin/babel",
        # 'BABEL_ARGUMENTS': '--presets es2015',
        # "PIPELINE_ENABLED": True,
        "CSS_COMPRESSOR": "pipeline.compressors.NoopCompressor",
        "JS_COMPRESSOR": "pipeline.compressors.NoopCompressor",
        "STYLESHEETS": {
            "gull_admin_styles": {
                "source_filenames": (
                    "gull-admin/css/themes/lite-purple.min.css",
                    "gull-admin/css/plugins/perfect-scrollbar.min.css",
                    "builder/css/plugins/noty/noty.css",
                    "builder/css/plugins/noty/bootstrap-v4.css",
                    "builder/css/plugins/select2/select2.min.css",
                    "builder/css/plugins/select2/select2-bootstrap4.min.css",
                    "mjolnic-bootstrap-colorpicker/dist/css/bootstrap-colorpicker.min.css",
                    "builder/css/plugins/animate/animate.css",
                    "builder/css/plugins/cropper/cropper.min.css",
                    "builder/css/plugins/datatables/datatables.min.css",
                    "builder/css/custom.css",
                    "builder/css/custom-rome.css",
                ),
                "variant": "datauri",
                "output_filename": "pipeline/css/gull_admin_styles.css",
            },
            "login_styles": {
                "source_filenames": ("gull-admin/css/themes/lite-purple.css",),
                "output_filename": "pipeline/css/login_styles.css",
            },
        },
        "JAVASCRIPT": {
            "gull_admin_scripts": {
                "source_filenames": (
                    "gull-admin/js/plugins/jquery-3.3.1.min.js",
                    "gull-admin/js/plugins/jquery-ui.min.js",
                    "gull-admin/js/plugins/bootstrap.bundle.min.js",
                    "builder/js/plugins/noty/noty.es6",
                    "gull-admin/js/plugins/perfect-scrollbar.min.js",
                    "gull-admin/js/scripts/script.min.js",
                    "gull-admin/js/scripts/sidebar.large.script.min.js",
                    "gull-admin/js/plugins/feather.min.js",
                    "gull-admin/js/scripts/tooltip.script.min.js",
                    "builder/js/plugins/datatables/datatables.min.es6",
                    "builder/js/app.es6",
                    # "builder/js/dashboard.es6",
                    # "builder/js/edit_interactive_flyer_without_pages.es6",
                    # "builder/js/new_interactive_flyer.es6",
                    # "builder/js/interactive_flyer/edit_product_interactivity.es6",
                    # "builder/js/interactive_flyer/interactive_flyer_index.es6",
                    # "builder/js/interactive_flyer/interactive_flyer_settings.es6",
                    "mjolnic-bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js",
                    "builder/js/plugins/select2/select2.min.es6",
                    "builder/js/plugins/loading_overlay/loadingoverlay.min.es6",
                    "builder/js/plugins/cropper/cropper.min.es6",
                    "builder/js/plugins/cropper/jquery-cropper.min.es6",
                    "gull-admin/js/plugins/tagging.min.js",
                    "w3color/w3color.js",
                    "rome/node_modules/@bevacqua/rome/dist/rome.js",
                    "builder/new/reactor.js",
                    "builder/new/polotno_integration.js",
                    "builder/new/edit_interactive_flyer.js",
                    "builder/new/giodicart_manager.js",
                    "builder/new/flyer_project_settings.js",
                    "builder/new/local_storage_manager.js",
                    "builder/new/permission_manager.js",
                    "builder/new/new_interactive_flyer.js",
                    "gull-admin/node_modules/sweetalert2/dist/sweetalert2.all.min.js",
                ),
                "output_filename": "pipeline/js/gull_admin_scripts.js",
            },
        },
    }

    # PIPELINE['CSS_COMPRESSOR'] = 'pipeline.compressors.yuglify.YuglifyCompressor'
    # PIPELINE['JS_COMPRESSOR'] = 'pipeline.compressors.yuglify.YuglifyCompressor'

    STATIC_LOW_RES_PIC_PATH = "/static/AI-Flyer/LowResolution/"
    JPG_EXT = ".jpg"
    INDD_EXT = ""
    STATIC_TEMPLATE_BLOCK_PATH = ""

    CATALOG_IMAGES_URL = "http://31.7.149.101:9051"

    CRISPY_TEMPLATE_PACK = "bootstrap4"

    LOGIN_REDIRECT_URL = "/dashboard"
    LOGOUT_REDIRECT_URL = "/"

    PYTHON_PATH = os.path.join(
        BASE_DIR, "../gestionale_interattivo_env/bin/python"
    )
    MANAGE_PY_PATH = os.path.join(BASE_DIR, "../../manage.py")

    # DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    # STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'

    AWS_ACCESS_KEY_ID = "AWS_ACCESS_KEY_ID"
    AWS_SECRET_ACCESS_KEY = "AWS_SECRET_ACCESS_KEY"
    AWS_STORAGE_BUCKET_NAME = "AWS_STORAGE_BUCKET_NAME"
    # AWS_S3_ENDPOINT_URL = "AWS_S3_ENDPOINT_URL"

    AWS_DEFAULT_ACL = "public-read"
    AWS_QUERYSTRING_AUTH = False
    # AWS_S3_SIGNATURE_VERSION = "s3"
    AWS_S3_FILE_OVERWRITE = False

    PRE_SALT = "presalt_"
    POST_SALT = "postsalt_"

    LOGIN_URL = "/"
    THUMBOR_URL = "http://80.211.97.190:8081/"

    USER_TYPE_AEB = "AEB"
    USER_TYPE_INTERNAL = "internal"
    USER_TYPE_GIODICART = "giodicart"

    JS_URLS = (
        "builder:error_page",
        "builder:interactive_flyer_settings",
        "builder:interactive_flyer_zip_generation_status",
        "builder:interactive_flyer_delete_page",
        "builder:subcategories_by_category",
        "builder:interactive_flyer_project_items",
        "builder:interactive_flyer_archive_products",
        "builder:get_product_campaign_api",
        "builder:get_product_archive_api",
        "builder:interactive_flyer_create_product",
        "builder:interactive_flyer_update_product",
        "builder:interactive_flyer_delete_product",
        "builder:get_interactive_flyer_products_page_api",
        "builder:get_interactive_flyer_product_images_api",
        "builder:interactive_flyer_create_product_image_api",
        "builder:interactive_flyer_product_image_delete_api",
        "builder:interactive_flyer_product_interactivity_api",
        "builder:interactive_flyer_interactivity_api",
        "builder:interactive_flyer_index_links_api",
        "builder:interactive_flyer_delete_index_api",
        "builder:interactive_flyer_create_index_link_api",
        "builder:interactive_flyer_edit_index_link_api",
        "builder:interactive_flyer_delete_index_link_api",
        "builder:get_permissions_api",
        "builder:get_price_labels_api",
        "builder:polotno_auth_api",
        "builder:polotno_api",
        "builder:search_giodicart_product_api",
        "builder:create_giodicart_product",
        "builder:update_giodicart_product",
    )

    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "formatters": {
            "simple": {
                "format": "%(levelname)s [%(name)s]: %(asctime)s %(message)s",
                "datefmt": "%Y-%m-%d %H:%M:%S",
            },
            "color": {
                "()": "colorlog.ColoredFormatter",
                "format": "%(log_color)s    %(levelname)s [%(name)s]: %(asctime)s %(message)s",
                "datefmt": "%Y-%m-%d %H:%M:%S",
                "log_colors": {
                    "DEBUG": "red",
                    "INFO": "cyan",
                    "WARNING": "yellow",
                    "ERROR": "red",
                    "CRITICAL": "bold_black,bg_white",
                },
            },
        },
        "handlers": {
            "color_console": {
                "class": "logging.StreamHandler",
                "formatter": "color",
            },
            "file": {
                "class": "logging.handlers.RotatingFileHandler",
                "maxBytes": 1024 * 1024 * 10,  # 20 MB
                "backupCount": 2,
                "formatter": "simple",
                "filename": os.path.join(BASE_DIR, "../../debug.log"),
            },
            "console": {
                "class": "logging.StreamHandler",
                "formatter": "simple",
            },
        },
        "loggers": {
            "": {
                "handlers": ["color_console", "file"],
                "propagate": True,
                "level": "DEBUG",
            },
            "botocore": {
                "handlers": ["file"],
                "propagate": False,
                "level": "DEBUG",
            },
            "boto3": {
                "handlers": ["file"],
                "propagate": False,
                "level": "DEBUG",
            },
            "s3transfer": {
                "handlers": ["file"],
                "propagate": False,
                "level": "DEBUG",
            },
            "urllib3": {
                "handlers": ["file"],
                "propagate": False,
                "level": "DEBUG",
            },
        },
    }

    CORS_ALLOWED_ORIGINS = [
        "https://ingraph.interattivo.net",
        "https://polotno.interattivo.net",
        "https://preview.interattivo.net",
        "http://80.211.163.216",
    ]
    CORS_ALLOW_METHODS = [
        "GET",
        "POST",
    ]
    CORS_REPLACE_HTTPS_REFERER = True
